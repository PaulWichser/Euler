#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

n = 4000000     #max number for this analysis

# while i < n:
#     if i % 2 == 0:
#         total += i
#     print "i=%d       total=%d" % (i,total)
#     i += i

def fibo(m):
    fib = [1,1]     #beginning the Fibonacci list
    i = 1           #start point for the Fibonacci list counter
    while fib[i] <= m:
        fib.append(fib[i]+fib[i-1])
        i += 1
    return fib

def evensum(m):
    total = 0
    for i in range (0 , len(m)-1):
#        print "m[i] = %d" % m[i]
        if (m[i] % 2) == 0:
            total += m[i]
    return total

print "\nThe sum of all even numbers in the Fibonacci sequence under %d is %d" % (n, evensum(fibo(n)))
